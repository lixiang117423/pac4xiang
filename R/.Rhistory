colnames(iris)
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width)) +
geom_point(alpha=0.5) +
stat_poly_line(formula=y~x)+
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
library(ggpmisc)
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width)) +
geom_point(alpha=0.5) +
stat_poly_line(formula=y~x)+
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width)) +
geom_point(alpha=0.5) +
stat_poly_line(formula=y~x)+
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width)) +
geom_point(alpha=0.5) +
#stat_poly_line(formula=y~x)+
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width)) +
geom_point(alpha=0.5) +
#stat_poly_line(formula=y~x)+
geom_smooth(
formula = y ~ x,
method = "lm",
se = TRUE, colour = "black", span = 0.8
) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Length)) +
geom_point(alpha=0.5) +
#stat_poly_line(formula=y~x)+
geom_smooth(
formula = y ~ x,
method = "lm",
se = TRUE, colour = "black", span = 0.8
) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
styler:::style_selection()
