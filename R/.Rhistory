colnames(iris)
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width)) +
geom_point(alpha=0.5) +
stat_poly_line(formula=y~x)+
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
library(ggpmisc)
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width)) +
geom_point(alpha=0.5) +
stat_poly_line(formula=y~x)+
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width)) +
geom_point(alpha=0.5) +
stat_poly_line(formula=y~x)+
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width)) +
geom_point(alpha=0.5) +
#stat_poly_line(formula=y~x)+
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Width)) +
geom_point(alpha=0.5) +
#stat_poly_line(formula=y~x)+
geom_smooth(
formula = y ~ x,
method = "lm",
se = TRUE, colour = "black", span = 0.8
) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
ggplot(iris, aes(x=Sepal.Length,y=Sepal.Length)) +
geom_point(alpha=0.5) +
#stat_poly_line(formula=y~x)+
geom_smooth(
formula = y ~ x,
method = "lm",
se = TRUE, colour = "black", span = 0.8
) +
stat_fit_tb(method = "lm",
method.args = list(formula = y~x),
tb.vars = c(Parameter = "term",
Estimate = "estimate",
"s.e." = "std.error",
"italic(t)" = "statistic",
"italic(P)" = "p.value"),
label.y = "top", label.x = "left",
parse=T)+
theme_bw()
styler:::style_selection()
rm(list = ls())
###########################################################
# gene OsPOX223, OsAPX1, OsAPX2, OsPAL
###########################################################
# 展示96孔板上的数值
plot96well(data = "下机数据/20211007lx_1 - Abs Quant.txt")
# 自动计算标曲
df.1 <- pac4xiang::calStandCurve(
data = "下机数据/20211007lx_1 - Abs Quant.txt",
genes = c("OsPOX223", "OsAPX1", "OsAPX2", "OsPAL"),
rep = 3, dilution = 4, start = 2, end = 7,
drop.NA = TRUE, fig.type = "pdf"
)
paste0("Design matrix should be input! Like...\n", print(design))
design = data.frame(N = 1:12,
Treatment = rep(c("CK", "T1", "T2"),each  =4),
Gene = rep(c("gene1", "gene2", "gene3", "gene4"), 3))
stop(paste0("Design matrix should be input! Like...\n", print(design)))
